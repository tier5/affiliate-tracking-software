<?php

namespace Vokuro\Models;

use Phalcon\Mvc\Model;
use Phalcon\Mvc\Model\Validator\InclusionIn;
use Phalcon\Mvc\Model\Validator\Numericality;

/**
 * BusinessSubscriptionPlan
 * 
 * @package Vokuro\Models
 * @autogenerated by Phalcon Developer Tools
 * @date 2016-05-23, 18:25:37
 */
class BusinessSubscriptionPlan extends Model
{


    protected $id;
    protected $locations;
    protected $sms_messages_per_location;
    protected $payment_plan;
    protected $subscription_pricing_plan_id;
    protected $user_id;
    protected $created_at;
    protected $update_at;
    protected $deleted_at;
    
    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return $this
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field locations
     *
     * @param integer $locations
     * @return $this
     */
    public function setLocations($locations)
    {
        $this->locations = $locations;

        return $this;
    }

    /**
     * Method to set the value of field sms_messages_per_location
     *
     * @param integer $sms_messages_per_location
     * @return $this
     */
    public function setSmsMessagesPerLocation($sms_messages_per_location)
    {
        $this->sms_messages_per_location = $sms_messages_per_location;

        return $this;
    }

    /**
     * Method to set the value of field payment_plan
     *
     * @param string $payment_plan
     * @return $this
     */
    public function setPaymentPlan($payment_plan)
    {
        $this->payment_plan = $payment_plan;

        return $this;
    }

    /**
     * Method to set the value of field subscription_pricing_plan_id
     *
     * @param integer $subscription_pricing_plan_id
     * @return $this
     */
    public function setSubscriptionPricingPlanId($subscription_pricing_plan_id)
    {
        $this->subscription_pricing_plan_id = $subscription_pricing_plan_id;

        return $this;
    }

    /**
     * Method to set the value of field user_id
     *
     * @param integer $user_id
     * @return $this
     */
    public function setUserId($user_id)
    {
        $this->user_id = $user_id;

        return $this;
    }
    
    /**
     * Method to set the value of field created_at
     *
     * @param integer $created_at
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->created_at = $created_at;

        return $this;
    }
    
    /**
     * Method to set the value of field updated_at
     *
     * @param integer $updated_at
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->updated_at = $updated_at;

        return $this;
    }
    
    /**
     * Method to set the value of field deleted_at
     *
     * @param integer $deleted_at
     * @return $this
     */
    public function setDeletedAt($deleted_at)
    {
        $this->deleted_at = $deleted_at;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Returns the value of field locations
     *
     * @return integer
     */
    public function getLocations()
    {
        return $this->locations;
    }

    /**
     * Returns the value of field sms_messages_per_location
     *
     * @return integer
     */
    public function getSmsMessagesPerLocation()
    {
        return $this->sms_messages_per_location;
    }

    /**
     * Returns the value of field payment_plan
     *
     * @return string
     */
    public function getPaymentPlan()
    {
        return $this->payment_plan;
    }

    /**
     * Returns the value of field subscription_pricing_plan_id
     *
     * @return integer
     */
    public function getSubscriptionPricingPlanId()
    {
        return $this->subscription_pricing_plan_id;
    }

    /**
     * Returns the value of field user_id
     *
     * @return integer
     */
    public function getUserId()
    {
        return $this->user_id;
    }
    
    /**
     * Returns the value of field created_at
     *
     * @return integer
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }
    
    /**
     * Returns the value of field updated_at
     *
     * @return integer
     */
    public function getUpdatedAt()
    {
        return $this->updated_at;
    }
    
    /**
     * Returns the value of field deleted_at
     *
     * @return integer
     */
    public function getDeletedAt()
    {
        return $this->deleted_at;
    }

    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        $this->belongsTo('subscription_pricing_plan_id', 'Vokuro\Models\SubscriptionPricingPlan', 'id', ['alias' => 'SubscriptionPricingPlan']);
        $this->belongsTo('user_id', 'Vokuro\Models\Users', 'id', ['alias' => 'Users']);
    }
    
    /**
     * Validation method for model.
     */
    public function validation()
    {
        $this->validate(new Numericality(["field" => 'locations' ]));
        $this->validate(new Numericality(["field" => 'sms_messages_per_location']));
        $this->validate(new InclusionIn([ "field"  => "payment_plan", "domain" => ['TR', 'M', 'Y', 'FR'] ]));
        $this->validate(new Numericality(["field" => 'subscription_pricing_plan_id']));
        $this->validate(new Numericality(["field" => 'user_id']));
        
        $pass = $this->locations > 0 &&
            $this->sms_messages_per_location > 0 &&
            $this->subscription_pricing_plan_id > 0 &&
            $this->user_id > 0;
        
        return true;//$pass && $this->validationHasFailed() != true;
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'business_subscription_plan';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return BusinessSubscriptionPlan[]
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return BusinessSubscriptionPlan
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return array(
            'id' => 'id',
            'locations' => 'locations',
            'sms_messages_per_location' => 'sms_messages_per_location',
            'payment_plan' => 'payment_plan',
            'subscription_pricing_plan_id' => 'subscription_pricing_plan_id',
            'user_id' => 'user_id',
            'created_at' => 'created_at',
            'updated_at' => 'updated_at',
            'deleted_at' => 'deleted_at' 
        );
    }

}
