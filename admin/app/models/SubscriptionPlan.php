<?php

namespace Vokuro\Models;

use Phalcon\Mvc\Model\Validator\InclusionIn;
use Phalcon\Validation\Validator\NumericalityValidator;

/**
 * SubscriptionPlan
 * 
 * @package Vokuro\Models
 * @autogenerated by Phalcon Developer Tools
 * @date 2016-05-23, 18:25:37
 */
class SubscriptionPlan extends Model
{

    /**
     *
     * @var integer
     */
    protected $id;

    /**
     *
     * @var integer
     */
    protected $locations;

    /**
     *
     * @var integer
     */
    protected $sms_messages_per_location;

    /**
     *
     * @var string
     */
    protected $payment_plan;

    /**
     *
     * @var integer
     */
    protected $subscription_profile_id;

    /**
     *
     * @var integer
     */
    protected $user_id;
    
    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return $this
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field locations
     *
     * @param integer $locations
     * @return $this
     */
    public function setLocations($locations)
    {
        $this->locations = $locations;

        return $this;
    }

    /**
     * Method to set the value of field sms_messages_per_location
     *
     * @param integer $sms_messages_per_location
     * @return $this
     */
    public function setSmsMessagesPerLocation($sms_messages_per_location)
    {
        $this->sms_messages_per_location = $sms_messages_per_location;

        return $this;
    }

    /**
     * Method to set the value of field payment_plan
     *
     * @param string $payment_plan
     * @return $this
     */
    public function setPaymentPlan($payment_plan)
    {
        $this->payment_plan = $payment_plan;

        return $this;
    }

    /**
     * Method to set the value of field subscription_profile_id
     *
     * @param integer $subscription_profile_id
     * @return $this
     */
    public function setSubscriptionProfileId($subscription_profile_id)
    {
        $this->subscription_profile_id = $subscription_profile_id;

        return $this;
    }

    /**
     * Method to set the value of field user_id
     *
     * @param integer $user_id
     * @return $this
     */
    public function setUserId($user_id)
    {
        $this->user_id = $user_id;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Returns the value of field locations
     *
     * @return integer
     */
    public function getLocations()
    {
        return $this->locations;
    }

    /**
     * Returns the value of field sms_messages_per_location
     *
     * @return integer
     */
    public function getSmsMessagesPerLocation()
    {
        return $this->sms_messages_per_location;
    }

    /**
     * Returns the value of field payment_plan
     *
     * @return string
     */
    public function getPaymentPlan()
    {
        return $this->payment_plan;
    }

    /**
     * Returns the value of field subscription_profile_id
     *
     * @return integer
     */
    public function getSubscriptionProfileId()
    {
        return $this->subscription_profile_id;
    }

    /**
     * Returns the value of field user_id
     *
     * @return integer
     */
    public function getUserId()
    {
        return $this->user_id;
    }

    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        $this->belongsTo('subscription_profile_id', 'Vokuro\Models\SubscriptionProfile', 'id', ['alias' => 'SubscriptionProfile']);
        $this->belongsTo('user_id', 'Vokuro\Models\Users', 'id', ['alias' => 'Users']);
    }
    
    /**
     * Validation method for model.
     */
    public function validation()
    {
        $this->validate(new NumericalityValidator(["field" => 'locations' ]));
        $this->validate(new NumericalityValidator(["field" => 'sms_messages_per_location']));
        $this->validate(new InclusionIn([ "field"  => "payment_plan", "domain" => ['monthly', 'annually'] ]));
        $this->validate(new NumericalityValidator(["field" => 'subscription_profile_id']));
        $this->validate(new NumericalityValidator(["field" => 'user_id']));
        
        $pass = $this->locations > 0 &&
            $this->sms_messages_per_location > 0 &&
            $this->subscription_profile_id > 0 &&
            $this->user_id > 0;
        
        return $pass && $this->validationHasFailed() != true;
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'subscription_plan';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return SubscriptionPlan[]
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return SubscriptionPlan
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return array(
            'id' => 'id',
            'locations' => 'locations',
            'sms_messages_per_location' => 'sms_messages_per_location',
            'payment_plan' => 'payment_plan',
            'subscription_profile_id' => 'subscription_profile_id',
            'user_id' => 'user_id'
        );
    }

}
